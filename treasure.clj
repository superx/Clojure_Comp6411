;; @Author: Harmeet Singh
;; COMP-6411


(defn readFile []
   (with-open [reader (clojure.java.io/reader "map.txt")]
   (reduce conj [] (line-seq reader))))

(defn makeA2DBox [row, col, value] 
    (vec (replicate row (vec (replicate col value)))))


(def rawData (vec (readFile)))
(def isMapValid true)
(def mapVec (vector [])) 
(def colOfFirstrow (count (get rawData 0)))
(loop [x 0]
      (when (< x (count rawData))
      (do
              (def lineNow (vec (char-array (nth rawData x))))
              (def gg (count lineNow))
              (if(or (< gg colOfFirstrow)(> gg colOfFirstrow))
                  (def isMapValid false)
                  (print "")
                  )
              (def mapVec (assoc mapVec x lineNow))
      )
      (recur (inc x))))

(def boolFlagMetric (makeA2DBox (count rawData) colOfFirstrow -1))

(def isGameOver false)
(startAdventure)

(defn startAdventure [] 
(cond
(true? isMapValid)
(do(if (true? (find-treasure 0 0))
   (do(println " I found the treasure :-)")
    (loop [x 0]
          (when (< x (count rawData))
          (do(println (nth mapVec x)))
          (recur (+ x 1)))))
    (do(println "Uh oh, I could not find the treasure :-("))))
    :else (println "Please provide right MAP")
    )
)


(defn find-treasure [i j]  
  (def i (int i))
  (def j (int j))
  (def currentColumn (count (get rawData (int i))))
  (if(or (>= i (count rawData)) (>= j currentColumn))
    (do(true? false))
    (do(if(true? isGameOver)
        (do(true? true))
        (do
          (def currentChar (get (get mapVec i) j))
          (if(and (= \+ currentChar) (= 1 (get (get boolFlagMetric i)j)))
            (do(true? true))
            (do
              (if(= 1 (get (get boolFlagMetric i) j))
                (do(true? false))
                (do(def currentRow (get boolFlagMetric i))
                  (def currentRow (assoc currentRow j 1))
                  (def boolFlagMetric (assoc boolFlagMetric i currentRow))
                  (case currentChar
                    \@ (do
                          (def isGameOver true)
                          (true? true)
                       )
                    \# (do
                          (false? true)
                       )

                    (if(or (= \- currentChar) (= \+ currentChar))
                      (do(def currentMapRow (get mapVec i))
                        (def currentMapRow (assoc currentMapRow j \+))
                        (def mapVec (assoc mapVec i currentMapRow))
                        (if(and (= 0 i) (= 0 j))
                          (do(def tempVar1 (find-treasure i (inc j))) 
                          (def tempVar2 (find-treasure (inc i) j))
                            (if(and (= false tempVar1) (= false tempVar2))
                              (do(def currentMapRow (get mapVec i))
                                  (def currentMapRow (assoc currentMapRow j \!))
                                  (def mapVec (assoc mapVec i currentMapRow))
                                  (false? true)
                              )
                              (do(or tempVar1 tempVar2)))
                          )
                          (do(if(and (= i (- (count rawData) 1)) (= j 0))
                                (do
                                  (def tempVar1 (find-treasure i (inc j) ))
                                  (def tempVar2 (find-treasure (dec i), j ))
                                  (if(or (= false tempVar1) (= false tempVar2))
                                    (do(def currentMapRow (get mapVec i))
                                        (def currentMapRow (assoc currentMapRow j \!))
                                        (def mapVec (assoc mapVec i currentMapRow))
                                        (false? true)
                                    )
                                    (do(or tempVar1 tempVar2))
                                  ))
                                (do(if(and (= i 0) (= j (- (count (nth rawData i)) 1)))
                                    (do(def tempVar1 (find-treasure (inc i) j ))
                                      (def tempVar2 (find-treasure i (dec j) ))
                                      (if(or (= false tempVar1) (= false tempVar2))
                                        (do(def currentMapRow (get mapVec i))
                                            (def currentMapRow (assoc currentMapRow j \!))
                                            (def mapVec (assoc mapVec i currentMapRow))
                                            (false? true)
                                        )
                                        (do(or tempVar1 tempVar2))))
                                    (do(if(and (= i (- (count rawData) 1)) (= j (- (count (nth rawData i)) 1)))
                                        (do(def tempVar1 (find-treasure (dec i), j ))
                                          (def tempVar2 (find-treasure i (dec j) ))
                                          (if(or (= false tempVar1) (= false tempVar2))
                                            (do(def currentMapRow (get mapVec i))
                                              (def currentMapRow (assoc currentMapRow j \!))
                                              (def mapVec (assoc mapVec i currentMapRow))
                                              (false? true)
                                            )
                                            (do(or tempVar1 tempVar2))))
                                        (do(if(= i 0)
                                            (do(def tempVar1 (find-treasure (inc i) j ))
                                                (def tempVar2 (find-treasure i (dec j) ))
                                                (def tempVar3 (find-treasure i (inc j) ))
                                                (if(or (and (= false tempVar1) (= false tempVar2)) (and (= false tempVar1) (= false tempVar3)) (and (= false tempVar2) (= false tempVar3)))
                                                  (do(def currentMapRow (get mapVec i))
                                                    (def currentMapRow (assoc currentMapRow j \!))
                                                    (def mapVec (assoc mapVec i currentMapRow))
                                                    (false? true)
                                                  )
                                                  (do(or tempVar1 tempVar2 tempVar3))))
                                              (do(if(= j 0)
                                                  (do(def tempVar1 (find-treasure i (inc j) ))
                                                    (def tempVar2 (find-treasure (dec i), j ))
                                                    (def tempVar3 (find-treasure (inc i) j ))
                                                    (if(or (and (= false tempVar1) (= false tempVar2)) (and (= false tempVar1) (= false tempVar3)) (and (= false tempVar2) (= false tempVar3)))
                                                      (do(def currentMapRow (get mapVec i))
                                                        (def currentMapRow (assoc currentMapRow j \!))
                                                        (def mapVec (assoc mapVec i currentMapRow))
                                                        (false? true)
                                                      )
                                                      (do(or tempVar1 tempVar2 tempVar3))))
                                                  (do(if(= i (- (count rawData) 1))
                                                    (do(def tempVar1 (find-treasure (dec i), j ))
                                                      (def tempVar2 (find-treasure i (dec j) ))
                                                      (def tempVar3 (find-treasure i (inc j) ))
                                                      (if(or (and (= false tempVar1) (= false tempVar2)) (and (= false tempVar1) (= false tempVar3)) (and (= false tempVar2) (= false tempVar3)))
                                                        (do(def currentMapRow (get mapVec i))
                                                          (def currentMapRow (assoc currentMapRow j \!))
                                                          (def mapVec (assoc mapVec i currentMapRow))
                                                          (false? true))
                                                        (do(or tempVar1 tempVar2 tempVar3))))
                                                    (do(if(= j (- (count (nth rawData i)) 1))
                                                          (do(def tempVar1 (find-treasure (dec i), j ))
                                                            (def tempVar2 (find-treasure i (dec j) ))
                                                            (def tempVar3 (find-treasure (inc i) j ))
                                                            (if(or (and (= false tempVar1) (= false tempVar2)) (and (= false tempVar1) (= false tempVar3)) (and (= false tempVar2) (= false tempVar3)))
                                                              (do(def currentMapRow (get mapVec i))
                                                                (def currentMapRow (assoc currentMapRow j \!))
                                                                (def mapVec (assoc mapVec i currentMapRow))
                                                                (false? true)
                                                              )
                                                              (do(or tempVar1 tempVar2 tempVar3))))
                                                          (do(def tempVar1 (find-treasure (dec i) j ))
                                                            (def tempVar2 (find-treasure i (inc j) ))
                                                            (def tempVar3 (find-treasure i (dec j) ))
                                                            (def tempVar4 (find-treasure (inc i) j ))
    (if(or (and (= false tempVar1) (= false tempVar2) (= false tempVar3)) (and (= false tempVar1) (= false tempVar3)(= false tempVar4)) (and (= false tempVar2) (= false tempVar3) (= false tempVar4))(and (= false tempVar1)(= false tempVar4)(= false tempVar2)))
                                                              (do(def currentMapRow (get mapVec i))
                                                                (def currentMapRow (assoc currentMapRow j \!))
                                                                (def mapVec (assoc mapVec i currentMapRow))
                                                                (false? true))
                                                  (do(or tempVar1 tempVar2 tempVar3 tempVar4))))))))))))))))))))
                                                  (do(println "Cant process this map")))))))))))))